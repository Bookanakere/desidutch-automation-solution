#Driver to be provided for local runs

#webdriver.driver = chrome
#webdriver.autodownload = true

#possibility to provide the ff options
#gecko.firefox.options

#possible to use the w3c experimental option
#chrome.experimental_options.w3c=true

#chrome.switches=headless

#chrome
#firefox

serenity.console.headings=normal
serenity.project.name = Base Project Report

#path to driver
#webdriver.gecko.driver=geckodriver

serenity.use.unique.browser = false

#serenity.browser,height = 1500
#serenity.browser,width = 1200

serenity.browser.maximized=true

#serenity.verbose.screenshots=true

serenity.test.root=starter

# How long does Serenity wait for elements that are not present on the screen to load
webdriver.timeouts.implicitlywait = 30000

serenity.take.screenshots=FOR_FAILURES
#FOR_EACH_ACTION , BEFORE_AND_AFTER_EACH_STEP , AFTER_EACH_STEP , FOR_FAILURES, DISABLED

serenity.logging=NORMAL
#QUIET, NORMAL, VERBOSE

serenity.verbose.steps=true
webdriver.wait.for.timeout = 20000


#Run through the steps without actually executing them.
serenity.dry.run=false

serenity.requirement.types = feature

# If this is enabled
#saucelabs.url=http://<username>:<password>@ondemand.saucelabs.com:80/wd/hub
#saucelabs.screenResolution=1600x1200

#saucelabs.url=https://oauth-rash.pb-80227:028b6f75-ef79-4a11-b492-b7dfdbd444c9@ondemand.eu-central-1.saucelabs.com:443/wd/hub

##### Desktop configuration ######
#saucelabs.target.platform=macOS
#saucelabs.driver.version=latest
#saucelabs.test.name=TestSearchDesiDutchOnMac
#saucelabs.browserName=chrome
#saucelabs.browser.version=latest

####################################

##### mobile configuration #######

#saucelabs.appiumVersion=1.20.1
#appium.deviceName=iPhone XS Simulator
#appium.deviceOrientation=portrait
#appium.platformVersion=14.3
#appium.platformName=iOS
#appium.browserName=Safari

##################################



# necessary to work with w3c compliant saucelabs connection
#saucelabs.seleniumVersion=3.141.59
#saucelabs.tags=
#saucelabs.access.key=
#saucelabs.user.id=

#how to use a custom driver
webdriver.driver = provided
webdriver.provided.type = mydriver
webdriver.provided.mydriver = starter.SauceMobileDriver
thucydides.driver.capabilities = mydriver
